[{"D:\\React\\restu\\src\\index.js":"1","D:\\React\\restu\\src\\App.js":"2","D:\\React\\restu\\src\\tester\\TForm.jsx":"3","D:\\React\\restu\\src\\tester\\BasicInfo.jsx":"4","D:\\React\\restu\\src\\tester\\LastBottom.jsx":"5","D:\\React\\restu\\src\\tester\\QasnAnsForm.jsx":"6","D:\\React\\restu\\src\\tester\\FormMessage.jsx":"7","D:\\React\\restu\\src\\tester\\AddressLeft.jsx":"8","D:\\React\\restu\\src\\tester\\ChartSalesByProdduct.jsx":"9","D:\\React\\restu\\src\\tester\\ChartMonthlySales.jsx":"10"},{"size":189,"mtime":1634545121060,"results":"11","hashOfConfig":"12"},{"size":250,"mtime":1642044751460,"results":"13","hashOfConfig":"12"},{"size":5638,"mtime":1639717422356,"results":"14","hashOfConfig":"12"},{"size":4451,"mtime":1641799906149,"results":"15","hashOfConfig":"12"},{"size":5005,"mtime":1639322103802,"results":"16","hashOfConfig":"12"},{"size":4869,"mtime":1639368057433,"results":"17","hashOfConfig":"12"},{"size":1262,"mtime":1639323560793,"results":"18","hashOfConfig":"12"},{"size":19447,"mtime":1639369282403,"results":"19","hashOfConfig":"12"},{"size":1824,"mtime":1639335376465,"results":"20","hashOfConfig":"12"},{"size":1886,"mtime":1639338615198,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18pvn2n",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},"D:\\React\\restu\\src\\index.js",[],"D:\\React\\restu\\src\\App.js",["46"],"//--------------- Tester Form -------------\nimport React from \"react\";\nimport TForm from './tester/TForm';\nimport StyleTester from './tester/StyleTester.css';\n\n\nconst App = () => {\n  return (\n    <>\n      <TForm />\n    </>\n  )\n}\n\nexport default App;\n","D:\\React\\restu\\src\\tester\\TForm.jsx",[],["47","48"],"D:\\React\\restu\\src\\tester\\BasicInfo.jsx",[],"D:\\React\\restu\\src\\tester\\LastBottom.jsx",[],"D:\\React\\restu\\src\\tester\\QasnAnsForm.jsx",[],"D:\\React\\restu\\src\\tester\\FormMessage.jsx",[],"D:\\React\\restu\\src\\tester\\AddressLeft.jsx",[],"D:\\React\\restu\\src\\tester\\ChartSalesByProdduct.jsx",["49"],"import React from 'react';\r\nimport { ResponsiveContainer, LineChart, Line, Legend, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nconst pdata = [\r\n    {\r\n        Month: '',\r\n        Sale: -0.001,\r\n        sValue: -0.001\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.001,\r\n        sValue: -0.001\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: 0.0005,\r\n        sValue: 0.0005\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.0004,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: '',\r\n        Sale: -0.0006,\r\n        sValue: -0.0005\r\n    },\r\n    \r\n];\r\nconst ChartSalesByProdduct = () => {\r\n    return (\r\n        <>\r\n          <ResponsiveContainer width=\"100%\" aspect={1}>\r\n            <LineChart data={pdata} margin={{right:10,top:10, bottom:20, left:-35}} >\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"Month\" tickCount={12} interval={'preserveStartEnd'}/>\r\n            <YAxis tickCount={5} tickFormatter={(v)=>v+\"k\"} />\r\n             <Line dataKey=\"Sale\" stroke=\"black\" activeDot={{r:5}} />\r\n             <Tooltip contentStyle={{backgroundColor:\"#abacad\", fontWeight:\"400\", color:\"red\"}} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChartSalesByProdduct;\r\n","D:\\React\\restu\\src\\tester\\ChartMonthlySales.jsx",["50"],"import React from 'react';\r\nimport { ResponsiveContainer, LineChart, Line, Legend, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nconst pdata = [\r\n    {\r\n        Month: 'Jan',\r\n        Sale: -0.001,\r\n        sValue: -0.001\r\n    },\r\n    {\r\n        Month: 'Feb',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: 'Mar',\r\n        Sale: -0.001,\r\n        sValue: -0.001\r\n    },\r\n    {\r\n        Month: 'Apr',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: 'May',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: 'Jun',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: 'Jul',\r\n        Sale: 0.0005,\r\n        sValue: 0.0005\r\n    },\r\n    {\r\n        Month: 'Aug',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: 'Sep',\r\n        Sale: -0.0005,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: 'Oct',\r\n        Sale: -0.0004,\r\n        sValue: -0.0005\r\n    },\r\n    {\r\n        Month: 'Nov',\r\n        Sale: 0,\r\n        sValue: 0\r\n    },\r\n    {\r\n        Month: 'Dec',\r\n        Sale: -0.0006,\r\n        sValue: -0.0005\r\n    },\r\n    \r\n];\r\nconst ChartMonthlySales = () => {\r\n    return (\r\n        <>\r\n          <ResponsiveContainer width=\"100%\" aspect={1}>\r\n            <LineChart data={pdata} margin={{right:10,top:10, bottom:20, left:-35}} >\r\n            {/* <Legend /> */}\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"Month\" tickCount={12} interval={'preserveStartEnd'}/>\r\n            <YAxis tickCount={5} tickFormatter={(v)=>v+\"k\"} />\r\n             <Line dataKey=\"Sale\" stroke=\"black\" activeDot={{r:5}} />\r\n             <Tooltip contentStyle={{backgroundColor:\"#abacad\", fontWeight:\"400\", color:\"red\"}} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChartMonthlySales;\r\n",{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":19},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":2,"column":48,"nodeType":"53","messageId":"54","endLine":2,"endColumn":54},{"ruleId":"51","severity":1,"message":"59","line":2,"column":48,"nodeType":"53","messageId":"54","endLine":2,"endColumn":54},"no-unused-vars","'StyleTester' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'Legend' is defined but never used.","no-global-assign","no-unsafe-negation"]